buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'

version = "1.18.2-${mod_version}"
group = 'com.rowanthemodder.artificersexpansion'
archivesBaseName = 'artificersexpansion'

// Java Version
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'artificersexpansion'
            mods {
                artificersexpansion {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'artificersexpansion'
            mods {
                artificersexpansion {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'artificersexpansion'
            mods {
                artificersexpansion {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'artificersexpansion', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                artificersexpansion {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir { dirs 'libs' } // M&A
    maven { url 'https://maven.theillusivec4.top/' } // Curios
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' } // Geckolib
    maven { url 'https://maven.tterrag.com/' } // Create, Flywheel
    maven { url 'https://dvs1.progwml6.com/files/maven/' } // JEI
    maven { url 'https://cursemaven.com' } // The One Probe
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    runtimeOnly fg.deobf("blank:mna:${mna_version}")
    compileOnly fg.deobf("blank:mna-${mna_version}:api")

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${minecraft_version}-${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${minecraft_version}-${curios_version}:api")

    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.18:${geckolib_version}")

    implementation fg.deobf("com.simibubi.create:create-${minecraft_version}:${create_version}:all") { transitive = false }

    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}")

    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    
    implementation fg.deobf("curse.maven:the-one-probe-${top_project_id}:${top_file}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Artificers Expansion",
                "Specification-Vendor"    : "rowanthemodder",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "rowanthemodder",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
